name: Terraform plan

on:
  push:
    paths:
      - '**/*.tf'
      - '.github/workflows/terraform-*.yaml'
  pull_request:
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

jobs:
  plan:
    runs-on: ubuntu-latest
    env:
      TF_VAR_sub_id: ${{ vars.AZURE_SUBSCRIPTION_ID }}
      TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Azure OIDC login
        uses: azure/login@v2
        with:
          client-id: ${{ vars.AZURE_CLIENT_ID }}
          tenant-id: ${{ vars.AZURE_TENANT_ID }}
          subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}

      - name: Terraform init
        run: terraform init -reconfigure

      - name: Terraform fmt
        run: terraform fmt -check

      - name: Terraform validate
        run: terraform validate

      - name: Terraform plan
        run: terraform plan -out tfplan -input=false -no-color

      - name: upload tfplan artifact
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: tfplan
          if-no-files-found: error

  apply:
    if: ${{ github.event_name == 'workflow_dispatch' }}
    needs: plan
    runs-on: ubuntu-latest

    env:
      TF_VAR_sub_id: ${{ vars.AZURE_SUBSCRIPTION_ID }}
      TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Azure OIDC login
        uses: azure/login@v2
        with:
          client-id: ${{ vars.AZURE_CLIENT_ID }}
          tenant-id: ${{ vars.AZURE_TENANT_ID }}
          subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform init
        run: terraform init -reconfigure -input=false

      - name: Download artifact (tfplan)
        uses: actions/download-artifact@v5
        with:
          name: tfplan
          path: .

      - name: Terraform apply
        run: terraform apply -input=false -auto-approve tfplan